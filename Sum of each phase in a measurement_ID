import numpy as np #Importing numpy

#The code below gets the sum for each phase for each measurement_id
#For example in measurement_id 0, the first row is 18, 1, -19. The code will say m0's observation one is equal to 0.
measure=df.groupby((np.arange(len(df.columns)) // 3), axis=1).sum().add_prefix('m')

#The code below sums up all the rows for each measurement_id.
total=measure.sum(axis=0)


# code to normalize the total
norm=(total-min(total))/(max(total)-min(total))

# code to get the z score
z_score=(total-np.mean(total))/(np.sqrt(np.var(total)))

#Doing natural log transformation
abtotal=abs(total)
natlog=np.log(abtotal)


# Below plots a histogram and best fit line of the variable total
import matplotlib.mlab as mlab
import matplotlib.pyplot as plt

mu = np.mean(total) # mean of distribution
sigma = np.sqrt(np.var(total)) # standard deviation of distribution

# the histogram of the data
n, bins, patches = plt.hist(total, 60, normed=1, facecolor='green', alpha=0.75)
#We need to figure out if 60 bins is correct

# add a 'best fit' line
y = mlab.normpdf( bins, mu, sigma)
l = plt.plot(bins, y, 'r--', linewidth=2)

#plot
plt.grid(True)

plt.show()
